{"version":3,"sources":["components/LastKey.tsx","App.tsx","index.tsx"],"names":["LastKey","state","pressedKey","eventCallback","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,iBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAV/C,oBAiBE,WACE,OACE,mBAAGQ,UAAU,eAAb,SAC6B,KAA1BF,KAAKR,MAAMC,WACR,0BADH,mCAE+BO,KAAKR,MAAMC,WAF1C,WApBT,GAA6BU,IAAMC,WCHtBC,EAAgB,kBAC3B,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,O,MCAJI,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.4292a40f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class LastKey extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.eventCallback);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.eventCallback);\n  }\n\n  eventCallback = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <p className=\"App__message\">\n        {this.state.pressedKey === ''\n          ? 'Nothing was pressed yet'\n          : `The last pressed key is [${this.state.pressedKey}]`}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport { LastKey } from './components/LastKey';\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <LastKey />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}